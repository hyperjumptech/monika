(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[30],{7983:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/run-in-raspberry-pi",function(){return e(3559)}])},3559:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return p},meta:function(){return s}});e(7294);var t=e(3905),r=e(8470);function i(n,a){if(null==n)return{};var e,t,r=function(n,a){if(null==n)return{};var e,t,r={},i=Object.keys(n);for(t=0;t<i.length;t++)e=i[t],a.indexOf(e)>=0||(r[e]=n[e]);return r}(n,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(t=0;t<i.length;t++)e=i[t],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var s={id:"run-monika-in-raspberry-pi",title:"Run Monika in Raspberry Pi"},l={meta:s},o=function(n){var a=n.children,e=i(n,["children"]);return(0,t.kt)(r.C,Object.assign({meta:s},e),a)};function p(n){var a=n.components,e=i(n,["components"]);return(0,t.kt)(o,Object.assign({},l,e,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Raspberry Pi is a good hardware to run Monika. For ",(0,t.kt)("a",Object.assign({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Raspberry_Pi_OS"}),"Raspbian OS")," user, you need to install NodeJS >= 14 manually since Raspbian package manager (apt) only install for NodeJS 8."),(0,t.kt)("h2",Object.assign({},{id:"install-node-14-in-raspbian"}),"Install Node 14 in Raspbian",(0,t.kt)("a",Object.assign({parentName:"h2"},{href:"#install-node-14-in-raspbian",title:"Direct link to heading",className:"anchor"}),(0,t.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,t.kt)("p",null,"Monika needs NodeJS >= 14 and npm ~= 6 to run.To install NodeJS 14 in Raspberry Pi (Raspbian OS), you need to get CPU architecture by running ",(0,t.kt)("inlineCode",{parentName:"p"},"uname"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"uname -a\n")),(0,t.kt)("p",null,"Next, download NodeJS package that matches your architecture. For example, if your architecture is ",(0,t.kt)("inlineCode",{parentName:"p"},"arm v7"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"# Other architectures are available at https://nodejs.org/dist/v14.17.3\nwget https://nodejs.org/dist/v14.17.3/node-v14.17.3-linux-armv7l.tar.xz\n")),(0,t.kt)("img",Object.assign({},{src:"/tutorials/raspberry-pi/uname-and-wget-node-arm-v7.png",alt:"uname example"})),(0,t.kt)("p",null,"Un-tar the file:"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"tar xf node-v14.17.3-linux-armv7l.tar.xz\n")),(0,t.kt)("p",null,"And install NodeJS globally:"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"sudo cp -R node-v14.17.3-linux-armv7l/* /usr/local/\n")),(0,t.kt)("img",Object.assign({},{src:"/tutorials/raspberry-pi/untar-and-install-node.png",alt:"install nodejs"})),(0,t.kt)("p",null,"Check NodeJS and NPM version using this command:"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"node -v\nnpm -v\n")),(0,t.kt)("img",Object.assign({},{src:"/tutorials/raspberry-pi/node-version-and-npm-version.png",alt:"nodejs & npm version"})),(0,t.kt)("h2",Object.assign({},{id:"install-and-run-monika-in-raspbian"}),"Install and Run Monika in Raspbian",(0,t.kt)("a",Object.assign({parentName:"h2"},{href:"#install-and-run-monika-in-raspbian",title:"Direct link to heading",className:"anchor"}),(0,t.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,t.kt)("p",null,"For now, the way to install Monika in Raspbian is to install from source code."),(0,t.kt)("p",null,"There are two ways to get Monika in Raspbian, from archive file and via Git."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Download Monika source code archive")),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),'cd ~\nmkdir monika-src\ncd monika-src\n# Download latest tarball and directly extract it to current directory\nwget -c `wget -S -O - https://api.github.com/repos/hyperjumptech/monika/releases/latest | grep -o -E "https://(.*)tarball(.*)/([^\\"]+)"` -O - | tar -xz --strip-components=1\n\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Get Monika from our Git repository")),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"cd ~\ngit clone --depth 1 --branch `git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/hyperjumptech/monika.git '*.*.*' | tail -1 | cut -d'/' -f 3` https://github.com/hyperjumptech/monika.git\ncd monika/\n")),(0,t.kt)("p",null,"Looking for ",(0,t.kt)("strong",{parentName:"p"},"other versions?")," Check ",(0,t.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/hyperjumptech/monika/releases"}),"here")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Download Monika dependencies and prepack")),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install && npm run prepack\n")),(0,t.kt)("h2",Object.assign({},{id:"run-monika"}),"Run Monika",(0,t.kt)("a",Object.assign({parentName:"h2"},{href:"#run-monika",title:"Direct link to heading",className:"anchor"}),(0,t.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,t.kt)("p",null,"To run Monika, use this command"),(0,t.kt)("pre",null,(0,t.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"./bin/run -c monika.example.yml\n")),(0,t.kt)("img",Object.assign({},{src:"/tutorials/raspberry-pi/run-monika-example-json.png",alt:"nodejs & npm version"})))}p.isMDXComponent=!0}},function(n){n.O(0,[547,778,470,774,888,179],(function(){return a=7983,n(n.s=a);var a}));var a=n.O();_N_E=a}]);