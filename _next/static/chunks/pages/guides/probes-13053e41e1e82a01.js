(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[621],{9021:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/probes",function(){return n(1174)}])},1174:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d},meta:function(){return s}});n(7294);var a=n(3905),r=n(8470);function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s={id:"probes",title:"Probes"},l={meta:s},o=function(e){var t=e.children,n=i(e,["children"]);return(0,a.kt)(r.C,Object.assign({meta:s},n),t)};function d(e){var t=e.components,n=i(e,["components"]);return(0,a.kt)(o,Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'Probes are the heart of the monitoring requests. Probes are made out of an array of "requests" and some controls. The control parameters determine how the probes are performed, such as repetition intervals, probe name, identification and text descriptions. Requests are either Ping, TCP or HTTP(S) requests to some location.\nMonika goes through each probe object in the ',(0,a.kt)("inlineCode",{parentName:"p"},"monika.yml")," config file, sends it out, and determines whether an alert or notification needs to be sent out."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: '1'\n    name: Name of the probe\n    description: Probe to check GET time\n    interval: 10 # in seconds\n    requests:\n      - method: GET\n        url: https://github.com\n    alerts: []\n  - id: '2'\n    name: Name of the probe 2\n    description: Probe to check GET health\n    interval: 10 # in seconds\n    requests:\n      - method: GET\n        url: https://github.com\n    alerts: []\n")),(0,a.kt)("p",null,"Basically probes are arranged as arrays of request objects."),(0,a.kt)("h2",Object.assign({},{id:"http-request-anatomy"}),"HTTP Request Anatomy",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#http-request-anatomy",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: '1'\n    name: 'Example: get Time'\n    description: Probe\n    interval: 10 # in seconds\n    requests:\n      - method: POST\n        url: https://mybackend.org/user/login\n        timeout: 7000 # in milliseconds\n        saveBody: true\n        headers:\n          Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkhlbGxvIGZyb20gSHlwZXJqdW1wIiwiaWF0IjoxNTE2MjM5MDIyfQ.T2SbP1G39CMD4MMfkOZYGFgNIQgNkyi0sPdiFi_DfVA\n        body:\n          username: someusername\n          password: somepassword\n        alerts:\n          - assertion: response.status != 200\n            message: Status not 2xx\n        allowUnauthorized: true\n        followRedirects: 1\n    incidentThreshold: 3\n    alerts:\n      - assertion: response.status != 200\n        message: HTTP response status is {{ response.status }}, expecting 200\n")),(0,a.kt)("p",null,"Details of the field are given in the table below."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",Object.assign({parentName:"tr"},{align:"left"}),"Topic"),(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"method (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Http method such as GET, POST, PUT, DELETE.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"url (required)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"This is the url endpoint to dispatch the request to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"timeout (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Request timeout in ",(0,a.kt)("strong",{parentName:"td"},"milliseconds"),", Default value is 10000 which corresponds to 10 seconds. If the request takes longer than ",(0,a.kt)("inlineCode",{parentName:"td"},"timeout"),", the request will be aborted.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"headers (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Http headers you might need for your request.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"body (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Any http body if your method requires it.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"interval (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Number of probe's interval (in seconds). Default value is 10 seconds.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"incidentThreshold (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Number of times an alert should return true before Monika sends notifications. For example, when incidentThreshold is 3, Monika will only send incident notifications when the probed URL returns non-2xx status 3 times in a row. After sending the notifications, Monika will not send notifications anymore until the alert status changes. Default value is 5. However, the actual number of retries will be the the greatest number between ",(0,a.kt)("inlineCode",{parentName:"td"},"incidentThreshold")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"recoveryThreshold"),". So if you want to have 3 retries, you need to set both ",(0,a.kt)("inlineCode",{parentName:"td"},"incidentThreshold")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"recoveryThreshold"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"recoveryThreshold (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Number of retries before Monika sends recovery notifications. For example, when recoveryThreshold is 3 and when previously a probe is marked as incident, Monika will only send recovery notification when the probing succeeds 3 times in a row. Default value is 5. However, the actual number of retries will be the the greatest number between ",(0,a.kt)("inlineCode",{parentName:"td"},"incidentThreshold")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"recoveryThreshold"),". So if you want to have 3 retries, you need to set both ",(0,a.kt)("inlineCode",{parentName:"td"},"incidentThreshold")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"recoveryThreshold"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"saveBody (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"When set to true, the response body of the request is stored in the internal database. The default is off when not defined. This is to keep the log file size small as some responses can be sizable. The setting is for each probe request.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"alerts (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"The condition which will trigger an alert, and the subsequent notification method to send out the alert. See below for further details on alerts and notifications. See ",(0,a.kt)("a",Object.assign({parentName:"td"},{href:"./alerts"}),"alerts")," section for detailed information.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"ping (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"(boolean), If set true then send a PING to the specified url instead.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"allowUnauthorized (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"(boolean), If set to true, will make https agent to not check for ssl certificate validity")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"followRedirects (optional)"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"The request follows redirects as many times as specified here. If unspecified, it will fallback to the value set by the ",(0,a.kt)("a",Object.assign({parentName:"td"},{href:"https://monika.hyperjump.tech/guides/cli-options#follow-redirects"}),"follow redirects flag"))))),(0,a.kt)("h2",Object.assign({},{id:"request-body"}),"Request Body",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#request-body",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"By default, the request body will be treated as-is. If the request header's ",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Type")," is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded"),", it will be serialized into URL-safe string in UTF-8 encoding. Body payloads will vary on the specific probes being requested. For HTTP requests, the body and headers are defined like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"requests:\n  - method: POST\n    url: https://example.com/auth/login\n    timeout: 7000 # in milliseconds\n    saveBody: true\n    headers:\n      Authorization: Bearer __your_token_here__\n    body:\n      username: someusername\n      password: somepassword\n")),(0,a.kt)("p",null,"You can use responses from previous http requests in the body of your next request, see how ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://hyperjumptech.github.io/monika/guides/examples#requests-chaining"}),"requests chaining")," work in the sections further below. It is also possible to automatically generate data in your payload. See the fake data payload section ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://hyperjumptech.github.io/monika/guides/probes#fake-data"}),"here"),"."),(0,a.kt)("h2",Object.assign({},{id:"content-type-header"}),"Content-Type header",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#content-type-header",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"Currently, Monika only supports Content-Type value ",(0,a.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")," with UTF-8 encoding."),(0,a.kt)("h3",Object.assign({},{id:"mariadb-or-mysql-probes"}),"Mariadb or MySQL Probes",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#mariadb-or-mysql-probes",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"To monitor the connectivity and the health of your MariaDB database, you can use the following monika configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'id-mariadb'\n    name: maria_probe\n    description: testing maria db\n    mariadb:\n      - host: 172.11.0.1\n        port: 3306\n        database: mydatabase\n        username: myuser\n        password: password\n")),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql")," keyword for your Mysql database like below. The ",(0,a.kt)("inlineCode",{parentName:"p"},"mariadb")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql")," probe types are interchagnable."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'id-mariadb'\n    name: maria_probe\n    description: testing maria db\n    mysql:\n      - host: 172.11.0.1\n        port: 3306\n        database: mydatabase\n        username: myuser\n        password: password\n")),(0,a.kt)("h3",Object.assign({},{id:"mongodb-request"}),"MongoDB Request",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#mongodb-request",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"You can check if your MongoDB instance is running and accessible by adding a probe with ",(0,a.kt)("inlineCode",{parentName:"p"},"mongo")," configuration as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'mongo-test'\n    name: MongoDB health check\n    interval: 30 # in seconds\n    mongo:\n      - host: localhost\n        port: 27017\n")),(0,a.kt)("p",null,"If your MongoDB configuration uses authentication settings, you can pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," field like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'mongo-test'\n    name: MongoDB health check\n    interval: 30 # in seconds\n    mongo:\n      - host: localhost\n        port: 28017\n        username: mongoadmin\n        password: secret\n")),(0,a.kt)("p",null,"If you have a connection URI, you can pass it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"uri")," field like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"- id: 'mongo-test'\n  name: MongoDB health check\n  interval: 30 # in seconds\n  mongo:\n    - uri: mongodb://mongoadmin:secret@localhost:28017\n")),(0,a.kt)("h3",Object.assign({},{id:"ping-request"}),"PING Request",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#ping-request",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"You can send an ICMP echo request to a specific url by specifying a ",(0,a.kt)("inlineCode",{parentName:"p"},"ping")," probe.\nIn this mode the a PING echo request is sent to the specified url."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'ping_test'\n    name: ping_test\n    description: requesting icmp ping\n    interval: 10 # in seconds\n    ping:\n      - uri: http://google.com\n")),(0,a.kt)("h3",Object.assign({},{id:"postgres-request"}),"Postgres Request",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#postgres-request",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"Monika provides a way to check your postgres database's health with a 'postgres' type probe. You can define the ",(0,a.kt)("inlineCode",{parentName:"p"},"host"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"port")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'postgres-01'\n    name: database health\n    description: ensure db health\n    interval: 30 # in seconds\n    postgres:\n      - host: 172.15.0.1\n        port: 5432\n        user: user\n        password: password\n        database: mydb\n")),(0,a.kt)("p",null,"Or alternatively you may provide a postgresql connection URI like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'postgres-01'\n    name: database health\n    description: ensure db health\n    interval: 30 # in seconds\n    postgres:\n      - uri: postgresql://user:password@172.15.0.1:5432/mydb\n")),(0,a.kt)("p",null,"If uri is provided along with host, port, user and password fields, connection will be derived from the uri string and the other fields will be ignored.",(0,a.kt)("br",{parentName:"p"}),"\n","Please see the ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING"}),"postgres connection specification")," for details on uri formatting."),(0,a.kt)("h3",Object.assign({},{id:"redis-request"}),"Redis Request",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#redis-request",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"You can check if your redis instance is running and accessible by adding a probe with ",(0,a.kt)("inlineCode",{parentName:"p"},"redis")," configuration as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'redis-test'\n    name: redis health\n    description: requesting redis PONG\n    interval: 30 # in seconds\n    redis:\n      - host: 172.15.0.2\n        port: 6379\n")),(0,a.kt)("p",null,"If your redis configuration include ",(0,a.kt)("inlineCode",{parentName:"p"},"AUTH")," settings, you might get some error like ",(0,a.kt)("inlineCode",{parentName:"p"},"Error: NOAUTH Authentication required."),"\nYou can pass a ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," field like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'redis-ping'\n    name: redis check with password\n    description: requesting redis PONG\n    interval: 30 # in seconds\n    redis:\n      - host: 172.15.0.2\n        port: 6379\n        password: mypassword\n")),(0,a.kt)("p",null,"You may also add a ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," property as needed. An alternative format that you can provide is a uri connection string for redis with the following specification ",(0,a.kt)("inlineCode",{parentName:"p"},"redis://[[username][:password]@][host][:port][/db-number]"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'redis-ping'\n    name: redis check with password\n    description: requesting redis PONG\n    interval: 30 # in seconds\n    redis:\n      - uri: 'redis://alice:mypassword@172.15.0.2:6379'\n")),(0,a.kt)("p",null,"See the full ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/redis/node-redis"}),"redis client configurations here"),"."),(0,a.kt)("h3",Object.assign({},{id:"tcp"}),"TCP",(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#tcp",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"You can send a TCP request to a specific ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"port")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"socket")," field."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: 'tcp-example'\n    socket:\n      host: localhost\n      port: 3333\n      data: Hello from Monika\n")),(0,a.kt)("h2",Object.assign({},{id:"probe-response-anatomy"}),"Probe Response Anatomy",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#probe-response-anatomy",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"The default shape of a response when Monika has successfully fetched a request is as the following."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"status: 200\nstatusText: OK\nheaders:\n  test-header: ...\nconfig:\n  url: https://reqres.in/api/users\n  method: GET\n  data:\n    mydata: value\n  headers:\n    Accept: application/json, text/plain, */*\n    User-Agent: axios/0.21.1\ndata: ...\n")),(0,a.kt)("p",null,"Details of the fields are shown in the table below."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",Object.assign({parentName:"tr"},{align:"left"}),"Topic"),(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"status"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"HTTP Status Code (e.g 200, 403, 500)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"statusText"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"HTTP Status Code Explanation (e.g OK, Forbidden, Internal Server Error)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"config"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Request configuration (e.g URL, Method, Data, Headers, Body, etc.)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"headers"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Response headers from the fetched request (e.g SetCookie, ETag, etc.).")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"data"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Response payload from the fetched request (e.g token, results, data).")))),(0,a.kt)("p",null,"Probe response data could be used for ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://hyperjumptech.github.io/monika/guides/examples#requests-chaining"}),"Request Chaining"),"."),(0,a.kt)("h2",Object.assign({},{id:"custom-http-responses"}),"Custom HTTP Responses",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#custom-http-responses",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"To make it easier to troubleshoot HTTP requests, we have mapped low-level errors returned by the HTTP library to numbers between 0 and 99. These custom errors are returned as the HTTP status code and can be used to trigger alerts in the same way as regular HTTP status codes."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",Object.assign({parentName:"tr"},{align:"left"}),"Code"),(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Error"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"0"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Connection not found")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"1"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Connection reset")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"2"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Connection refused")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"3"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Too many redirects")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"4"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Bad option value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"5"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Bad option")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"6"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Timed out")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"7"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Network error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"8"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Deprecated")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"9"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Bad response")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"11"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Bad request")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"12"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Canceled")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"13"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Not Supported")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"14"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Invalid URL")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"18"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Header / response size limit exceeded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"19"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"HTTP status code returns >= 400")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"20"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Invalid HTTP arguments")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"21"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Unexpected HTTP response to handle")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"22"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Connection closed unexpectedly")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"23"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Unsupported HTTP functionality")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"24"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Request / response size mismatch with Content-Length header value")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"25"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Missing HTTP client pool")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"26"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Expected error, exact reason is shown on runtime")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"27"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Unable to verify the first / leaf certificate")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"99"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Others")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:"left"}),"599"),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Connection aborted")))),(0,a.kt)("h2",Object.assign({},{id:"execution-order"}),"Execution order",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#execution-order",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"In a configuration with multiple probes, ",(0,a.kt)("inlineCode",{parentName:"p"},"Monika")," will load the requests in the order that they are entered, one after another. However, probes may be performed out of sequence depending on their interval setting, network latency and response times. By default Monika loops through all the probe configurations in the order they are entered, but you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"--id")," or the ",(0,a.kt)("inlineCode",{parentName:"p"},"--repeat")," flags to specify or repeat a particular sequence. See the ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://monika.hyperjump.tech/guides/cli-options"}),"cli options here")," for more information."),(0,a.kt)("p",null,"In general, Monika will sleep until the next ",(0,a.kt)("inlineCode",{parentName:"p"},"interval")," timer to repeat a probe. If no ",(0,a.kt)("inlineCode",{parentName:"p"},"interval")," time is specified for a probe, the default value will be used. If the configured probe ",(0,a.kt)("inlineCode",{parentName:"p"},"interval")," is shorter than the amount of time to dispatch all the requests, then ",(0,a.kt)("inlineCode",{parentName:"p"},"Monika")," will immediately repeat after the last response and any notification alerts sent."),(0,a.kt)("h2",Object.assign({},{id:"fake-data"}),"Fake Data",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#fake-data",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"You can use fake data to pass through your URLs, request body, and request headers. Here is the list of available fake data:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Expression"),(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Description"),(0,a.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Examples"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alpha <count> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns random string with length ",(0,a.kt)("inlineCode",{parentName:"td"},"count")," which contains only alphabetical characters. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"count")," is 8."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alpha }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"abcdefgh"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alpha 3 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"abcd"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alphaNumeric <count> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns random string with length ",(0,a.kt)("inlineCode",{parentName:"td"},"count")," which contains alphabets and digits. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"count")," is 8."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alphaNumeric }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"ab12ef34"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ alphaNumeric 4 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"ab12"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ countryCode }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random country code."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ countryCode }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"US"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ color }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random color string."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ color }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"lime")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"green"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ currency }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random currency code."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ currency }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"USD"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ email }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random email address."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ email }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"monika@hyperjump.tech"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ fullName }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random full name."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ fullName }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"John Doe"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ gender <binary> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random gender. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"binary")," is ",(0,a.kt)("inlineCode",{parentName:"td"},"true"),"."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ gender }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"Male"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ gender false }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"Trans*Man"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ isodate }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns the date of the request sending in ISO format."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ isodate }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"2022-08-24T04:36:46.019Z"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ latitude <min> <max> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random latitude between ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max")," value. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max")," are ",(0,a.kt)("inlineCode",{parentName:"td"},"-90")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"90"),"."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ latitude }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"-30.9501"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ latitude 0 30 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"3.9521"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ lines <lineCount> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"return ",(0,a.kt)("inlineCode",{parentName:"td"},"lineCount"),' number of lines of "Lorem ipsum" strings.'),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ lines }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"Lorem ipsum dolor sit amet"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ lines 2 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"Commodi non ex vol uptatibus quibusdam nisi aliquam dolor nihil. Eos maiore s enim praesentium."))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ longitude <min> <max> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random longitude between ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max")," value. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max")," are ",(0,a.kt)("inlineCode",{parentName:"td"},"-180")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"180"),"."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ longitude }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"-30.9501"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ longitude 0 30 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"3.9521"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ number <min> <max> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random integer number between ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max"),". The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"min")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"max")," are ",(0,a.kt)("inlineCode",{parentName:"td"},"0")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"1000"),"."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ number }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"720"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"{{ number 0 500 }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"480"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ objectId }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random MongoDB ObjectID."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ objectId }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"63034695eca3670c4e083657"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ statusCode }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random HTTP status code."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ statusCode }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"200"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ timestamp }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns current time in a form of a UNIX timestamp."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ timestamp }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"1661159139803"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ uuid }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random UUID."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ uuid }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"d8ffd51c-88cd-453e-906e-389b145891e7"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ word }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns a random English word."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ word }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"nicely"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ words <count> }}")),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),"returns ",(0,a.kt)("inlineCode",{parentName:"td"},"count")," number of random English words. The default value for ",(0,a.kt)("inlineCode",{parentName:"td"},"words")," is ",(0,a.kt)("inlineCode",{parentName:"td"},"3"),"."),(0,a.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{{ words }}")," returns ",(0,a.kt)("inlineCode",{parentName:"td"},"such fascinating energies"))))),(0,a.kt)("p",null,"To use the fake data, all you need to do is to wrap them in the double curly brackets like the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: '6'\n    name: '6'\n    interval: 10\n    requests:\n      - url: http://github.com?timestamp={{ timestamp }}\n        # This will be rendered as https://github.com?timestamp=1661159139803\n\n  - id: '15'\n    name: '15'\n    interval: 10\n    requests:\n      - url: http://github.com/user?id={{ uuid }}\n        # This will be rendered as http://github.com/user?id=d8ffd51c-88cd-453e-906e-389b145891e7\n")),(0,a.kt)("p",null,"If you want to use it as a request body, you can use it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: '0'\n    name: '0'\n    interval: 10\n    requests:\n      - url: https://httpbin.org/post\n        method: POST\n        body:\n          timestamp: '{{ timestamp }}'\n          id: '{{ uuid }}'\n          # This will be rendered as { timestamp: 1661159139803, id: d8ffd51c-88cd-453e-906e-389b145891e7 }\n")),(0,a.kt)("p",null,"The same goes for the request headers, you can use it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"probes:\n  - id: '0'\n    name: '0'\n    interval: 10\n    requests:\n      - url: https://httpbin.org/post\n        method: POST\n        body:\n          timestamp: '{{ timestamp }}'\n          id: '{{ uuid }}'\n        headers:\n          'X-USER-ID': '{{ uuid }}'\n          # This will be rendered as { X-USER-ID: d8ffd51c-88cd-453e-906e-389b145891e7 }\n")),(0,a.kt)("h2",Object.assign({},{id:"postman-json-file-support"}),"Postman JSON file support",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#postman-json-file-support",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"NOTE: We only support Postman collection v2.0 and v2.1 files.")),(0,a.kt)("p",null,"To run monika using a ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://www.postman.com/"}),"Postman")," JSON file, use ",(0,a.kt)("inlineCode",{parentName:"p"},"--postman")," flag as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"monika --postman <path_to_postman_file>\n")),(0,a.kt)("h2",Object.assign({},{id:"insomnia-file-support"}),"Insomnia file support",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#insomnia-file-support",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"Monika supports ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://insomnia.rest/"}),"Insomnia")," collection file in ",(0,a.kt)("strong",{parentName:"p"},"version 4")," format. Both ",(0,a.kt)("inlineCode",{parentName:"p"},"json")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"yaml")," files are supported.\nTo run Monika using an Insomnia collection file, use ",(0,a.kt)("inlineCode",{parentName:"p"},"--insomnia")," flag as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"monika --insomnia <path_to_insomnia_file>\n")),(0,a.kt)("h2",Object.assign({},{id:"har-file-support"}),"HAR file support",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#har-file-support",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("p",null,"HAR ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HAR_(file_format)"}),"HTTP-Archive")," format was created by the Web Performance Working Group and has become the standard in browser archive request data definition. To run monika using a HAR file, use ",(0,a.kt)("inlineCode",{parentName:"p"},"--har")," flag as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"monika --har <path_to_HAR_file>\n")),(0,a.kt)("h2",Object.assign({},{id:"further-reading"}),"Further reading",(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#further-reading",title:"Direct link to heading",className:"anchor"}),(0,a.kt)("span",Object.assign({parentName:"a"},{className:"icon icon-link"})))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",Object.assign({parentName:"li"},{href:"./alerts"}),"Alerts")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",Object.assign({parentName:"li"},{href:"./notifications"}),"Notifications"))))}d.isMDXComponent=!0}},function(e){e.O(0,[547,778,470,774,888,179],(function(){return t=9021,e(e.s=t);var t}));var t=e.O();_N_E=t}]);